---
# this script is used in either one of two modes:
#   a) server:  create robotuser + generate keypair
#               robotuser_generate_ssh_key == "yes"
#   b) client:  create robotuser, store private key and connection info
#               robotuser_generate_ssh_key == "no"
#
# NB: The "client" mode is also used to simply load the Ansible robotuser variables
#     using their defaults (and leave tasks 'unchanged')
#
- name: create robot user
  user:
    name: "{{ robotuser_name }}"
    generate_ssh_key: "{{ robotuser_generate_ssh_key }}"
    state: present

- name: authorize ssh incoming access for server robot user
  command: cp "/home/{{ robotuser_name }}/.ssh/id_rsa.pub" "/home/{{ robotuser_name }}/.ssh/authorized_keys"
  when: robotuser_generate_ssh_key == "yes"


- name: ensure that .ssh dir exists
  file:
    path: "/home/{{ robotuser_name }}/.ssh"
    state: directory
    mode: 0751
    owner: "{{ robotuser_name }}"
  when: robotuser_generate_ssh_key == "no"

# NB: to avoid loss of a key, script will not overwrite an existing key
- name: install private key for client robot user 
  template:
    src: id_rsa.j2
    dest: "/home/{{ robotuser_name }}/.ssh/id_rsa"
    force: no
    mode: 0700
    owner: "{{ robotuser_name }}"
  when: robotuser_generate_ssh_key == "no"

- name: install connection info file in home dir of robot user
  template:
    src: connection-info.yml.j2
    dest: "/home/{{ robotuser_name }}/connection-info.yml"
    mode: 0744
    owner: "{{ robotuser_name }}"
  when: robotuser_generate_ssh_key == "no"


